packages:
#Install mod_ssl
  yum:
    mod24_ssl : []
files:
  #Add Drupal S3FS reverse proxy to apache config
  # This allows existing hard links to continue functioning
  # and removes the need for CORS policies to allow CSS/JS files to be loaded.
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_httpd_s3fs.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
      . $EB_SUPPORT_DIR/envvars
      pushd /etc/httpd/conf/
        echo "
        #Start s3fs reverse proxy to s3
        SSLProxyEngine on
        ProxyRequests Off
        <Proxy *>
            Order deny,allow
            Allow from all
        </Proxy>
        ProxyPass /s3fs-css/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPassReverse /s3fs-css/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPass /s3fs-js/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPassReverse /s3fs-js/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPass /s3/files/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPassReverse /s3/files/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPass /sites/default/files/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        ProxyPassReverse /sites/default/files/ https://${ASSET_STORE}.s3.amazonaws.com/${APPLICATION}/public/
        #End s3fs
        " >> httpd.conf
      popd
  #get an up to date cacert file to allow curl to use https (required by s3fs).
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/06_curl_cacert.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      pushd /etc/
        curl --remote-name --time-cond cacert.pem https://curl.haxx.se/ca/cacert.pem
        echo 'openssl.cafile="/etc/cafile.pem"' >> /etc/php-7.0.ini
      popd
